---
import DefaultLayout from '../layouts/DefaultLayout.astro'
import Hero from '../components/Hero.astro'
import ContentMedia from '../components/ContentMedia.astro'

import Card from '../components/Card2.astro'

import { getCollection } from "astro:content"

const posts = (await getCollection("posts")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const projects = (await getCollection("projects")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const last_posts = posts.slice(0, 4);

const last_projects = projects.slice(0, 4);
---

<DefaultLayout title="Home">

  <Hero />

  <section class="my-2">
    <div class="container">
      <h2 class="mb-7 mx-auto pl-7 italic text-2xl">Hey thereðŸ‘‹</h2>
      <div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
        <section class="relative pr-4 lg:col-span-3 md:mb-10">
          <svg class="absolute h-full w-full overflow-visible">
            <defs>
              <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
                <stop offset="0%" style={{ stopColor: "#6b21a8", stopOpacity: 1 }}
                ></stop>
                <stop offset="100%" style={{ stopColor: "#e879f9", stopOpacity: 1 }}
                ></stop>
              </linearGradient>
            </defs>
            <path
              id="border-path"
              fill="none"
              stroke="url(#gradient)"
              stroke-width="4"></path>
          </svg>
          <p
            id="anim-p"
            class="text-main px-5 text-white text-lg md:text-xl mx-auto mb-30 pb-12"
          >
            You've stumbled upon <span class="font-bold text-accent">Richard's</span
            > little corner of the internet, where creativity runs rampant and
            normal is just a setting on a washing machine.<br /><br />
             Stick around, explore the digital masterpieces, and enjoy the
            occasional artistic shenanigans. It's more fun than you'd think!<br
            /><br />
             Delight in the unpredictable artistic shenanigans that burst forth from
            the canvas of this digital universe. Here, every visit is an adventure,
            every glance an exploration. Dive in, the pixels are warm!<br /><br />
             This site is just my latest attempt at an online presence. After
            considering dropping my old site and starting again I decided to just
            continue anew here and keep my legacy site live. So here goes...
          </p>
        </section>
      </div>
    </div>
  </section>

  <section class="container">
    <h2 class="mx-auto pl-7 italic text-2xl pb-6">Latest Posts</h2>

    <div class="grid grid-cols-1 gap-3 md:grid-cols-2 lg:grid-cols-4 pt-3"> 
        {
          last_posts.map((post) => (
            <div>
            <Card 
              title={post.data.title}
              desc={post.data.description}
              url={'/posts/' + post.slug}
              target="_self"
              badge={post.data.badge}
              img={post.data.image}
              pub_date={post.data.pubDate.toDateString()}
              tags={post.data.tags}
            />
          </div>
          ))
        }
    </div>
  </section>

  <section class="container">

    <h2 class="mb-7 mx-auto pl-7 italic text-2xl mt-8">A few projects</h2>

    <div class="grid grid-cols-1 pb-10 gap-3 md:grid-cols-2 lg:grid-cols-4">
        {
          last_projects.map((project) => (
            <div>
            <Card 
              title={project.data.title}
              desc={project.data.description}
              url={"/blog/" + project.slug}
              target="_self"
              badge={project.data.badge}
              img={project.data.image}
              pub_date={project.data.pubDate.toDateString()}
              tags={project.data.tags}
            />
          </div>
          ))
        }
    </div>
  </section>

  <ContentMedia imgSrc="/accessible-components.webp">
    <h2>Accessible Components</h2>
    <p class="text-2xl">
      This theme provides plenty of tried and tested Accessible Astro Components. Some are native to this theme and a
      lot of others are integrated using a <a href="https://github.com/markteekman/accessible-astro-components"
        >separate package</a
      >. They'll get you up and running in building an accessible solution for your visitors.
    </p>
  </ContentMedia>
  
  <ContentMedia imgSrc="/wcag-compliant.webp" reverseImg={true}>
    <h2>WCAG 2.1 AA Compliant</h2>
    <p class="text-2xl">
      Using semantic HTML, landmarks, skip links, screen reader friendly content, aria-labels, keyboard accessible
      navigation and components, clear outlines and tab indicators and the right color contrast, you're more certain of
      reaching WCAG AA compliance.
    </p>
  </ContentMedia>

  <!-- <section class="mt-64 mb-32">
    <div class="container">
      <h2 class="mb-16 text-6xl">Counters</h2>
      <div class="grid grid-cols-1 gap-12 sm:grid-cols-2 md:grid-cols-4">
        <Counter count="130" title="Stars" sub="On GitHub" />
        <Counter count="17" title="Accessible" sub="Components" />
        <Counter count="500" title="Commits" sub="Merged" />
        <Counter count="18+" title="Months" sub="Since launch" />
      </div>
    </div>
  </section> -->

</DefaultLayout>

<style>
  #border-path {
    animation: draw 1s forwards 1s ease-out;
  }

  @keyframes draw {
    to {
      stroke-dashoffset: 0;
    }
  }
</style>

<script>
  function updatePath() {
    const textMain = document.querySelector("#anim-p") as HTMLElement;
    const path = document.querySelector("#border-path") as SVGPathElement;

    if (textMain && path) {
      path.setAttribute(
        "d",
        `M0,0 V${textMain.offsetHeight} H${textMain.offsetWidth} v${
          textMain.offsetHeight / 6
        }`
      );
      const pathLength = path.getTotalLength();

      path.style.strokeDasharray = pathLength.toString();
      path.style.strokeDashoffset = pathLength.toString();
    }
  }
  // Update the path when the page loads
  window.addEventListener("DOMContentLoaded", updatePath);
  // Update the path when the window is resized
  window.addEventListener("resize", updatePath);
</script>
