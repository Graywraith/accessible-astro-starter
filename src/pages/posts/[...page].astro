---
import type { GetStaticPathsOptions, Page } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { IMG_ASSETS_BASE_PATH } from "../../config";
import Card from "../../components/Card2.astro";
import MainLayout from "../../layouts/DefaultLayout.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const publishedBlog = await getCollection("posts", ({ data }) => {
    return data.draft !== true;
  });

  const posts: CollectionEntry<"post">[] = publishedBlog.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

  return paginate(posts, {
    pageSize: 9,
  });
}

const { page } = Astro.props as { page: Page<CollectionEntry<"blog">> };

const pageDataLength = () => {
  if (page.currentPage === 1) {
    return page.data.length;
  } else if (page.currentPage === page.lastPage) {
    return page.total;
  } else {
    return 10 + page.data.length;
  }
};
---

<MainLayout
  title="Blog"
  description="What's going on posts..."
>
  <section class="mt-10 container">
    <h1 class="text-xl md:text-3xl text-center font-bold">Latest Posts</h1>

    <div class="my-10 grid grid-cols-1 md:grid-cols-3 gap-2">
      {
        page.data.map((post) => (
        <div>
            <Card 
              title={post.data.title}
              desc={post.data.description}
              imageSrc={IMG_ASSETS_BASE_PATH + post.data.image}
              url={'/posts/' + post.slug}
              target="_self"
              badge={post.data.badge}
              pub_date={post.data.pubDate.toDateString()}
              tags={post.data.tags}
            />
          </div>
        ))
      }
    </div>

    <div>
      <p class="text-center font-semibold mb-5">
        Showing{" "}{pageDataLength()} posts out of{" "}
        {page.total}
      </p>
      <div class="mb-5 flex items-center justify-center gap-5">
        {
          page.url.prev ? (
            <a
              href={`${page.url.prev}/`}
              class="bg-blue-600 px-5 py-2 rounded-md  text-white"
            >
              Previous
            </a>
          ) : (
            <span class="bg-gray-600 cursor-not-allowed px-5 py-2 rounded-md  text-white">
              Previous
            </span>
          )
        }
        {
          page.url.next ? (
            <a
              class="bg-blue-600 px-5 py-2 rounded-md text-white"
              href={`${page.url.next}/`}
            >
              Next
            </a>
          ) : (
            <span class="bg-gray-600 cursor-not-allowed px-5 py-2 rounded-md  text-white">
              Next
            </span>
          )
        }
      </div>
    </div>
  </section>
</MainLayout>